from aiogram import Router
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from nobrain_bot.features.order.states import OrderStates
from nobrain_bot.features.order.utils import go_to_next_service_block


router = Router(name="order_site")


@router.message(OrderStates.Site_Idea)
async def site_idea(message: Message, state: FSMContext):
    data = await state.get_data()
    details = data.get("details", {})
    details.setdefault("site", {})["idea"] = (message.text or "").strip()
    await state.update_data(details=details)

    await message.answer(
        "üì¶ –ö–∞–∫–∏–µ —Ä–∞–∑–¥–µ–ª—ã –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–∏–¥–µ—Ç—å –Ω–∞ —Å–∞–π—Ç–µ?\n\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä: ¬´–û –∫–æ–º–ø–∞–Ω–∏–∏¬ª, ¬´–£—Å–ª—É–≥–∏¬ª, ¬´–û—Ç–∑—ã–≤—ã¬ª, ¬´–ö–æ–Ω—Ç–∞–∫—Ç—ã¬ª"
    )
    await state.set_state(OrderStates.Site_Blocks)


@router.message(OrderStates.Site_Blocks)
async def site_blocks(message: Message, state: FSMContext):
    data = await state.get_data()
    details = data.get("details", {})
    details.setdefault("site", {})["blocks"] = (message.text or "").strip()
    await state.update_data(details=details)

    await message.answer(
        "‚öôÔ∏è –ö–∞–∫–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–æ–ª–∂–µ–Ω —É–º–µ—Ç—å –≤—ã–ø–æ–ª–Ω—è—Ç—å —Å–∞–π—Ç?\n\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä: –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É, –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –æ–Ω–ª–∞–π–Ω, –æ—Ç–∫—Ä—ã—Ç—å –∫–∞—Ä—Ç—É, –Ω–∞–ø–∏—Å–∞—Ç—å –≤ WhatsApp/Telegram"
    )
    await state.set_state(OrderStates.Site_Functionality)


@router.message(OrderStates.Site_Functionality)
async def site_functionality(message: Message, state: FSMContext):
    data = await state.get_data()
    details = data.get("details", {})
    details.setdefault("site", {})["functionality"] = (message.text or "").strip()
    await state.update_data(details=details)

    await message.answer("üìë –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –≥–æ—Ç–æ–≤—ã–µ —Ç–µ–∫—Å—Ç—ã –∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–ª—è —Å–∞–π—Ç–∞ –∏–ª–∏ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –≤—Å—ë —Å –Ω—É–ª—è?")
    await state.set_state(OrderStates.Site_Content)


@router.message(OrderStates.Site_Content)
async def site_content(message: Message, state: FSMContext):
    data = await state.get_data()
    details = data.get("details", {})
    details.setdefault("site", {})["content"] = (message.text or "").strip()
    await state.update_data(details=details)

    await message.answer(
        "üé® –í –∫–∞–∫–æ–º —Å—Ç–∏–ª–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–∞–π—Ç?\n\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä: –º–∏–Ω–∏–º–∞–ª–∏–∑–º, —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π, —Å—Ç—Ä–æ–≥–∏–π, —è—Ä–∫–∏–π, ¬´–ª—é–∫—Å¬ª –∏ —Ç.–¥."
    )
    await state.set_state(OrderStates.Site_Style)


@router.message(OrderStates.Site_Style)
async def site_style(message: Message, state: FSMContext):
    data = await state.get_data()
    details = data.get("details", {})
    details.setdefault("site", {})["style"] = (message.text or "").strip()
    await state.update_data(details=details)

    await message.answer(
        "üîó –ï—Å—Ç—å –ª–∏ —Ä–µ—Ñ–µ—Ä–µ–Ω—Å—ã? –ü—Ä–∏—à–ª–∏—Ç–µ —Å—Å—ã–ª–∫–∏ –∏–ª–∏ —Ñ–∞–π–ª—ã.\n\n"
        "–ï—Å–ª–∏ –Ω–µ—Ç ‚Äî –Ω–∞–ø–∏—à–∏—Ç–µ ¬´–Ω–µ—Ç¬ª."
    )
    await state.set_state(OrderStates.Site_Refs)


@router.message(OrderStates.Site_Refs)
async def site_refs(message: Message, state: FSMContext):
    # —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ—Ñ–µ—Ä–µ–Ω—Å—ã –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º –≤–µ—Ç–∫—É
    data = await state.get_data()
    details = data.get("details", {})
    details.setdefault("site", {})["refs"] = (message.text or "").strip()

    completed = set(data.get("completed_blocks", set()))
    completed.add("site")

    await state.update_data(details=details, completed_blocks=completed)
    await go_to_next_service_block(message, state)
