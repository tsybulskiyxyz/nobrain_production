
================================================================================
Файл: nobrain_bot\app.py
================================================================================
import asyncio
from aiogram import Bot, Dispatcher
from core.config import get_settings
from nobrain_bot.core.routers import setup_routers


async def main():
    config = get_settings()
    bot = Bot(token=config.bot_token)

    dp = Dispatcher()
    dp.include_router(setup_routers())

    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())

================================================================================
Файл: nobrain_bot\core\config.py
================================================================================
from dataclasses import dataclass
from dotenv import load_dotenv
import os

# Загружаем .env
load_dotenv()


@dataclass
class Settings:
    bot_token: str
    admin_id: int


def get_settings() -> Settings:
    return Settings(
        bot_token=os.getenv("BOT_TOKEN", ""),
        admin_id=int(os.getenv("ADMIN_ID", "0")),
        site_url=os.getenv("SITE_URL", ""),

    )


================================================================================
Файл: nobrain_bot\core\routers.py
================================================================================
from aiogram import Router

from nobrain_bot.features.common.handlers.start_handler import router as start_router
from nobrain_bot.features.common.handlers.fallback_handler import router as fallback_router


ALL_ROUTERS: tuple[Router, ...] = (
    start_router,

    fallback_router
    )


def setup_routers() -> Router:
    """
    Возвращает корневой Router и включает все роутеры в заданном порядке.
    """
    root = Router(name="root")
    for r in ALL_ROUTERS:
        root.include_router(r)
    return root


================================================================================
Файл: nobrain_bot\features\common\texts.py
================================================================================
def welcome(name: str) -> str:
    return (
        f"Йо, {name or 'друг'}! ✌️\n\n"
        "Ты в боте студии `nobrain_production`🧠\n"
        "🌌Мы превращаем идеи в продукты\n\n"
        "Хочешь узнать о нас, глянуть услуги или сразу оформить заказ❓\n\n"
        "👇 Всё через меню ниже."
    )


================================================================================
Файл: nobrain_bot\features\common\handlers\fallback_handler.py
================================================================================
from aiogram import Router
from aiogram.types import Message

from nobrain_bot.features.common.keyboards.main_menu_keyboard import main_menu_kb

router = Router(name="fallback")


@router.message()
async def fallback(message: Message):
    await message.answer(
        text=(
            "😕 Я тебя не понял.\n"
            "Выбери действие через меню ниже 👇"
        ),
        reply_markup=main_menu_kb()
    )


================================================================================
Файл: nobrain_bot\features\common\handlers\start_handler.py
================================================================================
from aiogram import Router, F
from aiogram.filters import CommandStart
from aiogram.types import Message

from nobrain_bot.features.common import texts
from nobrain_bot.features.common.keyboards.main_menu_keyboard import main_menu_kb


router = Router(name="start")


@router.message(F.text == '/start')
async def cmd_start(message: Message):
    await message.answer(texts.welcome(message.from_user.first_name),parse_mode='Markdown', reply_markup=main_menu_kb())

================================================================================
Файл: nobrain_bot\features\common\keyboards\main_menu_keyboard.py
================================================================================
from aiogram.types import KeyboardButton, ReplyKeyboardMarkup


def main_menu_kb() -> ReplyKeyboardMarkup:
    kb = [
        [KeyboardButton(text="🧠 Что такое nobrain_production?")],
        [KeyboardButton(text="💼 Витрина услуг")],
        [KeyboardButton(text="📝 Создать заказ")],
        [KeyboardButton(text="📱 Связаться с менеджером")],
        [ KeyboardButton(text="📰 Наш блог")]
    ]
    return ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        input_field_placeholder="Выберите действие"
    )

